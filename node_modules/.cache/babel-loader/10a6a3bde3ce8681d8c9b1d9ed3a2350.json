{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\India\\\\Documents\\\\shopping-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Fragment, useEffect } from \"react\";\nimport { uiActions } from \"./store/ui-slice\";\nimport Notification from \"./components/UI/Notification\";\nimport { is } from \"@reduxjs/toolkit/node_modules/immer/dist/internal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const cartIsShown = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const sendData = async () => {\n      dispatch(uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending\",\n        message: \"Sending data .......\"\n      }));\n      const response = await fetch(\"https://react-http-7c7fd-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent cart data successfully\"\n      }));\n    };\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    sendData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed\"\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [cartIsShown && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NSecZ7r2PagdS2h10s9RXwLbpGU=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/India/Documents/shopping-app/src/App.js"],"names":["Cart","Layout","Products","useSelector","useDispatch","Fragment","useEffect","uiActions","Notification","is","isInitial","App","cartIsShown","state","ui","cartIsVisible","cart","notification","dispatch","sendData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,EAAT,QAAmB,mDAAnB;;AAEA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,WAAW,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASC,aAArB,CAA/B;AACA,QAAMC,IAAI,GAAGb,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAxB;AACA,QAAMC,YAAY,GAAGd,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASG,YAArB,CAAhC;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,QAAQ,GAAG,YAAY;AAC3BD,MAAAA,QAAQ,CACNX,SAAS,CAACa,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,SAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAQA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf;AAFR,OAF0B,CAA5B;;AAQA,UAAI,CAACQ,QAAQ,CAACM,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,EAAN;AACD;;AAEDb,MAAAA,QAAQ,CACNX,SAAS,CAACa,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,UAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KA5BD;;AA8BA,QAAGb,SAAH,EAAa;AACXA,MAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AAEDS,IAAAA,QAAQ,GAAGa,KAAX,CAAkBC,KAAD,IAAW;AAC1Bf,MAAAA,QAAQ,CACNX,SAAS,CAACa,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,QAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KARD;AASD,GA7CQ,EA6CN,CAACP,IAAD,EAAOE,QAAP,CA7CM,CAAT;AA+CA,sBACE,QAAC,QAAD;AAAA,eACGD,YAAY,iBAAK,QAAC,YAAD;AAChB,MAAA,MAAM,EAAEA,YAAY,CAACI,MADL;AAEhB,MAAA,KAAK,EAAEJ,YAAY,CAACK,KAFJ;AAGhB,MAAA,OAAO,EAAEL,YAAY,CAACM;AAHN;AAAA;AAAA;AAAA;AAAA,YADpB,eAME,QAAC,MAAD;AAAA,iBACGX,WAAW,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADlB,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAlEQD,G;UACaR,W,EACPA,W,EACQA,W,EACJC,W;;;KAJVO,G;AAoET,eAAeA,GAAf","sourcesContent":["import Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Fragment, useEffect } from \"react\";\nimport { uiActions } from \"./store/ui-slice\";\nimport Notification from \"./components/UI/Notification\";\nimport { is } from \"@reduxjs/toolkit/node_modules/immer/dist/internal\";\n\nlet isInitial = true;\n\nfunction App() {\n  const cartIsShown = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const sendData = async () => {\n      dispatch(\n        uiActions.showNotification({\n          status: \"pending\",\n          title: \"Sending\",\n          message: \"Sending data .......\",\n        })\n      );\n\n      const response = await fetch(\n        \"https://react-http-7c7fd-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent cart data successfully\",\n        })\n      );\n    };\n\n    if(isInitial){\n      isInitial = false;\n      return;\n    }\n\n    sendData().catch((error) => {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending cart data failed\",\n        })\n      );\n    });\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification &&  <Notification\n        status={notification.status}\n        title={notification.title}\n        message={notification.message}\n      />}\n      <Layout>\n        {cartIsShown && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}